// Generated from Rows.g4 by ANTLR 4.2.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class RowsLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		XOBJ=1, NOBJ=2, DIVIDE=3, MULTIPLY=4, MINUS=5, PLUS=6, GT=7, LT=8, EQ=9, 
		EXPR=10, FLOATATOM=11, OSC=12, PHASOR=13, DAC=14, METRO=15, MOD=16, FCOUNTER=17, 
		SIG=18, CLIP=19, BP=20, HIP=21, LOP=22, VCF=23, OBJ=24, CANVAS=25, CONNECT=26, 
		MSG=27, POW=28, LINE=29, UNPACK=30, COS=31, NOISE=32, TGL=33, INT=34, 
		FLOAT=35, DIGIT=36, TRIGGER=37, BANG=38, VAR=39, STRING=40, SEMICOLON=41, 
		LPAREN=42, RPAREN=43, TAB=44, NL=45;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'#X'", "'#N'", "DIVIDE", "MULTIPLY", "MINUS", "PLUS", "'>'", "'<'", "'=='", 
		"'expr'", "'floatatom'", "'osc~'", "'phasor~'", "'dac~'", "'metro'", "'mod'", 
		"'fcounter'", "'sig~'", "'clip~'", "'bp~'", "'hip~'", "'lop~'", "'vcf~'", 
		"'obj'", "'canvas'", "'connect'", "'msg'", "'pow'", "'line~'", "'unpack'", 
		"'cos~'", "'noise~'", "'tgl'", "INT", "FLOAT", "DIGIT", "'trigger'", "'bng'", 
		"VAR", "STRING", "';'", "'('", "')'", "TAB", "NL"
	};
	public static final String[] ruleNames = {
		"XOBJ", "NOBJ", "DIVIDE", "MULTIPLY", "MINUS", "PLUS", "GT", "LT", "EQ", 
		"EXPR", "FLOATATOM", "OSC", "PHASOR", "DAC", "METRO", "MOD", "FCOUNTER", 
		"SIG", "CLIP", "BP", "HIP", "LOP", "VCF", "OBJ", "CANVAS", "CONNECT", 
		"MSG", "POW", "LINE", "UNPACK", "COS", "NOISE", "TGL", "INT", "FLOAT", 
		"DIGIT", "TRIGGER", "BANG", "VAR", "STRING", "SEMICOLON", "LPAREN", "RPAREN", 
		"TAB", "NL"
	};


	public RowsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Rows.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2/\u0141\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\5\4g\n\4\3\5\3\5"+
		"\3\5\5\5l\n\5\3\6\3\6\3\6\5\6q\n\6\3\7\3\7\3\7\5\7v\n\7\3\b\3\b\3\t\3"+
		"\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26"+
		"\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3"+
		"!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\6#\u010a\n#\r#\16#\u010b\3$\6$\u010f"+
		"\n$\r$\16$\u0110\3$\3$\7$\u0115\n$\f$\16$\u0118\13$\3%\3%\3&\3&\3&\3&"+
		"\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3)\6)\u012c\n)\r)\16)\u012d\3*\3"+
		"*\3+\3+\3,\3,\3-\6-\u0137\n-\r-\16-\u0138\3-\3-\3.\5.\u013e\n.\3.\3.\2"+
		"\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/\3\2\5\3\2\62;\4\2\62;C|\4\2\13"+
		"\13\"\"\u014a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2"+
		"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2"+
		"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2"+
		"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2"+
		"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2"+
		"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\3]\3\2\2\2\5`\3"+
		"\2\2\2\7f\3\2\2\2\tk\3\2\2\2\13p\3\2\2\2\ru\3\2\2\2\17w\3\2\2\2\21y\3"+
		"\2\2\2\23{\3\2\2\2\25~\3\2\2\2\27\u0083\3\2\2\2\31\u008d\3\2\2\2\33\u0092"+
		"\3\2\2\2\35\u009a\3\2\2\2\37\u009f\3\2\2\2!\u00a5\3\2\2\2#\u00a9\3\2\2"+
		"\2%\u00b2\3\2\2\2\'\u00b7\3\2\2\2)\u00bd\3\2\2\2+\u00c1\3\2\2\2-\u00c6"+
		"\3\2\2\2/\u00cb\3\2\2\2\61\u00d0\3\2\2\2\63\u00d4\3\2\2\2\65\u00db\3\2"+
		"\2\2\67\u00e3\3\2\2\29\u00e7\3\2\2\2;\u00eb\3\2\2\2=\u00f1\3\2\2\2?\u00f8"+
		"\3\2\2\2A\u00fd\3\2\2\2C\u0104\3\2\2\2E\u0109\3\2\2\2G\u010e\3\2\2\2I"+
		"\u0119\3\2\2\2K\u011b\3\2\2\2M\u0123\3\2\2\2O\u0127\3\2\2\2Q\u012b\3\2"+
		"\2\2S\u012f\3\2\2\2U\u0131\3\2\2\2W\u0133\3\2\2\2Y\u0136\3\2\2\2[\u013d"+
		"\3\2\2\2]^\7%\2\2^_\7Z\2\2_\4\3\2\2\2`a\7%\2\2ab\7P\2\2b\6\3\2\2\2cg\7"+
		"\61\2\2de\7\61\2\2eg\7\u0080\2\2fc\3\2\2\2fd\3\2\2\2g\b\3\2\2\2hl\7,\2"+
		"\2ij\7,\2\2jl\7\u0080\2\2kh\3\2\2\2ki\3\2\2\2l\n\3\2\2\2mq\7/\2\2no\7"+
		"/\2\2oq\7\u0080\2\2pm\3\2\2\2pn\3\2\2\2q\f\3\2\2\2rv\7-\2\2st\7-\2\2t"+
		"v\7\u0080\2\2ur\3\2\2\2us\3\2\2\2v\16\3\2\2\2wx\7@\2\2x\20\3\2\2\2yz\7"+
		">\2\2z\22\3\2\2\2{|\7?\2\2|}\7?\2\2}\24\3\2\2\2~\177\7g\2\2\177\u0080"+
		"\7z\2\2\u0080\u0081\7r\2\2\u0081\u0082\7t\2\2\u0082\26\3\2\2\2\u0083\u0084"+
		"\7h\2\2\u0084\u0085\7n\2\2\u0085\u0086\7q\2\2\u0086\u0087\7c\2\2\u0087"+
		"\u0088\7v\2\2\u0088\u0089\7c\2\2\u0089\u008a\7v\2\2\u008a\u008b\7q\2\2"+
		"\u008b\u008c\7o\2\2\u008c\30\3\2\2\2\u008d\u008e\7q\2\2\u008e\u008f\7"+
		"u\2\2\u008f\u0090\7e\2\2\u0090\u0091\7\u0080\2\2\u0091\32\3\2\2\2\u0092"+
		"\u0093\7r\2\2\u0093\u0094\7j\2\2\u0094\u0095\7c\2\2\u0095\u0096\7u\2\2"+
		"\u0096\u0097\7q\2\2\u0097\u0098\7t\2\2\u0098\u0099\7\u0080\2\2\u0099\34"+
		"\3\2\2\2\u009a\u009b\7f\2\2\u009b\u009c\7c\2\2\u009c\u009d\7e\2\2\u009d"+
		"\u009e\7\u0080\2\2\u009e\36\3\2\2\2\u009f\u00a0\7o\2\2\u00a0\u00a1\7g"+
		"\2\2\u00a1\u00a2\7v\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7q\2\2\u00a4 \3"+
		"\2\2\2\u00a5\u00a6\7o\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7f\2\2\u00a8"+
		"\"\3\2\2\2\u00a9\u00aa\7h\2\2\u00aa\u00ab\7e\2\2\u00ab\u00ac\7q\2\2\u00ac"+
		"\u00ad\7w\2\2\u00ad\u00ae\7p\2\2\u00ae\u00af\7v\2\2\u00af\u00b0\7g\2\2"+
		"\u00b0\u00b1\7t\2\2\u00b1$\3\2\2\2\u00b2\u00b3\7u\2\2\u00b3\u00b4\7k\2"+
		"\2\u00b4\u00b5\7i\2\2\u00b5\u00b6\7\u0080\2\2\u00b6&\3\2\2\2\u00b7\u00b8"+
		"\7e\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7k\2\2\u00ba\u00bb\7r\2\2\u00bb"+
		"\u00bc\7\u0080\2\2\u00bc(\3\2\2\2\u00bd\u00be\7d\2\2\u00be\u00bf\7r\2"+
		"\2\u00bf\u00c0\7\u0080\2\2\u00c0*\3\2\2\2\u00c1\u00c2\7j\2\2\u00c2\u00c3"+
		"\7k\2\2\u00c3\u00c4\7r\2\2\u00c4\u00c5\7\u0080\2\2\u00c5,\3\2\2\2\u00c6"+
		"\u00c7\7n\2\2\u00c7\u00c8\7q\2\2\u00c8\u00c9\7r\2\2\u00c9\u00ca\7\u0080"+
		"\2\2\u00ca.\3\2\2\2\u00cb\u00cc\7x\2\2\u00cc\u00cd\7e\2\2\u00cd\u00ce"+
		"\7h\2\2\u00ce\u00cf\7\u0080\2\2\u00cf\60\3\2\2\2\u00d0\u00d1\7q\2\2\u00d1"+
		"\u00d2\7d\2\2\u00d2\u00d3\7l\2\2\u00d3\62\3\2\2\2\u00d4\u00d5\7e\2\2\u00d5"+
		"\u00d6\7c\2\2\u00d6\u00d7\7p\2\2\u00d7\u00d8\7x\2\2\u00d8\u00d9\7c\2\2"+
		"\u00d9\u00da\7u\2\2\u00da\64\3\2\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd\7"+
		"q\2\2\u00dd\u00de\7p\2\2\u00de\u00df\7p\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1"+
		"\7e\2\2\u00e1\u00e2\7v\2\2\u00e2\66\3\2\2\2\u00e3\u00e4\7o\2\2\u00e4\u00e5"+
		"\7u\2\2\u00e5\u00e6\7i\2\2\u00e68\3\2\2\2\u00e7\u00e8\7r\2\2\u00e8\u00e9"+
		"\7q\2\2\u00e9\u00ea\7y\2\2\u00ea:\3\2\2\2\u00eb\u00ec\7n\2\2\u00ec\u00ed"+
		"\7k\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0\7\u0080\2\2"+
		"\u00f0<\3\2\2\2\u00f1\u00f2\7w\2\2\u00f2\u00f3\7p\2\2\u00f3\u00f4\7r\2"+
		"\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7e\2\2\u00f6\u00f7\7m\2\2\u00f7>\3\2"+
		"\2\2\u00f8\u00f9\7e\2\2\u00f9\u00fa\7q\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc"+
		"\7\u0080\2\2\u00fc@\3\2\2\2\u00fd\u00fe\7p\2\2\u00fe\u00ff\7q\2\2\u00ff"+
		"\u0100\7k\2\2\u0100\u0101\7u\2\2\u0101\u0102\7g\2\2\u0102\u0103\7\u0080"+
		"\2\2\u0103B\3\2\2\2\u0104\u0105\7v\2\2\u0105\u0106\7i\2\2\u0106\u0107"+
		"\7n\2\2\u0107D\3\2\2\2\u0108\u010a\5I%\2\u0109\u0108\3\2\2\2\u010a\u010b"+
		"\3\2\2\2\u010b\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010cF\3\2\2\2\u010d"+
		"\u010f\5I%\2\u010e\u010d\3\2\2\2\u010f\u0110\3\2\2\2\u0110\u010e\3\2\2"+
		"\2\u0110\u0111\3\2\2\2\u0111\u0112\3\2\2\2\u0112\u0116\7\60\2\2\u0113"+
		"\u0115\5I%\2\u0114\u0113\3\2\2\2\u0115\u0118\3\2\2\2\u0116\u0114\3\2\2"+
		"\2\u0116\u0117\3\2\2\2\u0117H\3\2\2\2\u0118\u0116\3\2\2\2\u0119\u011a"+
		"\t\2\2\2\u011aJ\3\2\2\2\u011b\u011c\7v\2\2\u011c\u011d\7t\2\2\u011d\u011e"+
		"\7k\2\2\u011e\u011f\7i\2\2\u011f\u0120\7i\2\2\u0120\u0121\7g\2\2\u0121"+
		"\u0122\7t\2\2\u0122L\3\2\2\2\u0123\u0124\7d\2\2\u0124\u0125\7p\2\2\u0125"+
		"\u0126\7i\2\2\u0126N\3\2\2\2\u0127\u0128\7&\2\2\u0128\u0129\5Q)\2\u0129"+
		"P\3\2\2\2\u012a\u012c\t\3\2\2\u012b\u012a\3\2\2\2\u012c\u012d\3\2\2\2"+
		"\u012d\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012eR\3\2\2\2\u012f\u0130\7"+
		"=\2\2\u0130T\3\2\2\2\u0131\u0132\7*\2\2\u0132V\3\2\2\2\u0133\u0134\7+"+
		"\2\2\u0134X\3\2\2\2\u0135\u0137\t\4\2\2\u0136\u0135\3\2\2\2\u0137\u0138"+
		"\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u013a\3\2\2\2\u013a"+
		"\u013b\b-\2\2\u013bZ\3\2\2\2\u013c\u013e\7\17\2\2\u013d\u013c\3\2\2\2"+
		"\u013d\u013e\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0140\7\f\2\2\u0140\\\3"+
		"\2\2\2\r\2fkpu\u010b\u0110\u0116\u012d\u0138\u013d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}